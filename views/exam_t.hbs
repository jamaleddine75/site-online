<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Take Exam</title>
  <link rel="stylesheet" href="/exam_t.css" />
</head>
<body>
  <nav>
    <h1>My Exam App</h1>
  </nav>
  <main id="main-content">
    <p class="loading">Loading exam...</p>
  </main>

  <script >
    const main = document.getElementById("main-content");

const params = new URLSearchParams(window.location.search);
const examId = params.get("examId");

let currentQuestionIndex = 0;
let answers = {};
let timeLeft = 0;
let timer = null;
let exam = null;

function formatTime(seconds) {
  const mins = Math.floor(seconds / 60);
  const secs = seconds % 60;
  return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
}

function loadExam() {
  const exams = JSON.parse(localStorage.getItem("exams") || "[]");
  exam = exams.find(e => e.id === examId);
  if (!exam) {
    main.innerHTML = "<p class='error'>Exam not found. <a href='/home'>Go home</a></p>";
    return;
  }

  timeLeft = exam.timeLimit * 60;
  renderQuestion();
  startTimer();
}

function startTimer() {
  timer = setInterval(() => {
    timeLeft--;
    if (timeLeft <= 0) {
      clearInterval(timer);
      submitExam();
    }
    document.getElementById("time-left").textContent = `Time Left: ${formatTime(timeLeft)}`;
  }, 1000);
}

function renderQuestion() {
  const q = exam.questions[currentQuestionIndex];
  const progress = Math.round(((currentQuestionIndex + 1) / exam.questions.length) * 100);

  main.innerHTML = `
    <div class="card">
      <h2>${exam.title}</h2>
      <p>${exam.description}</p>
      <p><strong>Question ${currentQuestionIndex + 1} of ${exam.questions.length}</strong></p>
      <div class="progress-bar"><div class="progress" style="width:${progress}%"></div></div>
      <p id="time-left">Time Left: ${formatTime(timeLeft)}</p>
      <p>${q.text}</p>
      <div id="answer-options"></div>
      <div>
        <button onclick="prevQuestion()" ${currentQuestionIndex === 0 ? "disabled" : ""}>Previous</button>
        <button onclick="${currentQuestionIndex === exam.questions.length - 1 ? "submitExam()" : "nextQuestion()"}">
          ${currentQuestionIndex === exam.questions.length - 1 ? "Submit" : "Next"}
        </button>
      </div>
    </div>
  `;

  const answerEl = document.getElementById("answer-options");
  const savedAnswer = answers[q.id] || "";

  if (q.type === "multiple-choice" || q.type === "true-false") {
    const options = q.type === "true-false" ? ["True", "False"] : q.options || [];
    options.forEach(opt => {
      const label = document.createElement("label");
      label.innerHTML = `
        <input type="radio" name="answer" value="${opt}" ${opt === savedAnswer ? "checked" : ""}>
        ${opt}
      `;
      answerEl.appendChild(label);
      answerEl.appendChild(document.createElement("br"));
    });

    answerEl.querySelectorAll("input").forEach(input => {
      input.addEventListener("change", () => {
        answers[q.id] = input.value;
      });
    });
  } else if (q.type === "short-answer") {
    const input = document.createElement("input");
    input.type = "text";
    input.value = savedAnswer;
    input.placeholder = "Enter your answer";
    input.addEventListener("input", () => {
      answers[q.id] = input.value;
    });
    answerEl.appendChild(input);
  }
}

function nextQuestion() {
  if (currentQuestionIndex < exam.questions.length - 1) {
    currentQuestionIndex++;
    renderQuestion();
  }
}

function prevQuestion() {
  if (currentQuestionIndex > 0) {
    currentQuestionIndex--;
    renderQuestion();
  }
}

function submitExam() {
  clearInterval(timer);

  let score = 0;
  let max = 0;

  exam.questions.forEach(q => {
    max += q.points;
    const ans = answers[q.id] || "";

    if (
      (typeof q.correctAnswer === "string" && ans.toLowerCase() === q.correctAnswer.toLowerCase()) ||
      (Array.isArray(q.correctAnswer) && q.correctAnswer.includes(ans))
    ) {
      score += q.points;
    }
  });

  const percentage = Math.round((score / max) * 100);

  main.innerHTML = `
    <div class="card">
      <h2>Exam Completed</h2>
      <p>Your Score: ${percentage}%</p>
      <p>${percentage >= 70 ? "You passed! ðŸŽ‰" : "You did not pass. Keep studying!"}</p>
      <button onclick="window.location.href='/'">Return to Dashboard</button>
    </div>
  `;
}

loadExam();

  </script>
</body>
</html>
